// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.API.Data.Context;

namespace SmartSchool.API.Migrations
{
    [DbContext(typeof(SmartSchoolContextSqlServer))]
    [Migration("20210606135826_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartSchool.API.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Name = "Ciência da Computação"
                        },
                        new
                        {
                            CourseId = 2,
                            Name = "Sistema de Informação"
                        },
                        new
                        {
                            CourseId = 3,
                            Name = "Engenharia de Software"
                        },
                        new
                        {
                            CourseId = 4,
                            Name = "Arquitetura de Software"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseHours")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequiredDisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("RequiredDisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseHours = 0,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseHours = 0,
                            CourseId = 1,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseHours = 0,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseHours = 0,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseHours = 0,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 6,
                            CourseHours = 0,
                            CourseId = 2,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 7,
                            CourseHours = 0,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 8,
                            CourseHours = 0,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 9,
                            CourseHours = 0,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 10,
                            CourseHours = 0,
                            CourseId = 4,
                            Name = "Programação",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 11,
                            CourseHours = 0,
                            CourseId = 4,
                            Name = "Lógica",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 12,
                            CourseHours = 0,
                            CourseId = 3,
                            Name = "Lógica",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 13,
                            CourseHours = 0,
                            CourseId = 1,
                            Name = "Lógica",
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(2008, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marta",
                            Phone = "33225555",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 442, DateTimeKind.Local).AddTicks(9491),
                            StudentEnrollment = 1,
                            Surname = "Kent"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BirthDate = new DateTime(2010, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paula",
                            Phone = "3354288",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(2058),
                            StudentEnrollment = 2,
                            Surname = "Isabela"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laura",
                            Phone = "55668899",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(2072),
                            StudentEnrollment = 3,
                            Surname = "Antonia"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthDate = new DateTime(2003, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Luiza",
                            Phone = "6565659",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(2077),
                            StudentEnrollment = 4,
                            Surname = "Maria"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthDate = new DateTime(1999, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lucas",
                            Phone = "565685415",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(2081),
                            StudentEnrollment = 5,
                            Surname = "Machado"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BirthDate = new DateTime(1998, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro",
                            Phone = "456454545",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(2089),
                            StudentEnrollment = 6,
                            Surname = "Alvares"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BirthDate = new DateTime(2000, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paulo",
                            Phone = "9874512",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(2094),
                            StudentEnrollment = 7,
                            Surname = "José"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(3672)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4469)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4475)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4476)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4477)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4481)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4482)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4484)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4485)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4487)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4488)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4490)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4491)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4495)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4497)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4499)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4500)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4502)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4503)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4504)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4505)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4507)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 443, DateTimeKind.Local).AddTicks(4508)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherEnrollment")
                        .HasColumnType("int");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Active = true,
                            Name = "Lauro",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 382, DateTimeKind.Local).AddTicks(7064),
                            Surname = "Oliveira",
                            TeacherEnrollment = 1
                        },
                        new
                        {
                            TeacherId = 2,
                            Active = true,
                            Name = "Roberto",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 386, DateTimeKind.Local).AddTicks(3486),
                            Surname = "Soares",
                            TeacherEnrollment = 2
                        },
                        new
                        {
                            TeacherId = 3,
                            Active = true,
                            Name = "Ronaldo",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 386, DateTimeKind.Local).AddTicks(3508),
                            Surname = "Marconi",
                            TeacherEnrollment = 3
                        },
                        new
                        {
                            TeacherId = 4,
                            Active = true,
                            Name = "Rodrigo",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 386, DateTimeKind.Local).AddTicks(3511),
                            Surname = "Carvalho",
                            TeacherEnrollment = 4
                        },
                        new
                        {
                            TeacherId = 5,
                            Active = true,
                            Name = "Alexandre",
                            StartDate = new DateTime(2021, 6, 6, 10, 58, 26, 386, DateTimeKind.Local).AddTicks(3512),
                            Surname = "Montanha",
                            TeacherEnrollment = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Discipline", "RequiredDiscipline")
                        .WithMany()
                        .HasForeignKey("RequiredDisciplineId");

                    b.HasOne("SmartSchool.API.Models.Teacher", "Teacher")
                        .WithMany("DisciplineClasses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("RequiredDiscipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Discipline", "Discipline")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Student", "Student")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.API.Models.Course", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("SmartSchool.API.Models.Discipline", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool.API.Models.Student", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool.API.Models.Teacher", b =>
                {
                    b.Navigation("DisciplineClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
